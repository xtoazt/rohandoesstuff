import { useState } from 'react';
import ExploitCard from './ExploitCard';
import { exploits, exploitsByCategory, workingExploits, easyExploits } from '../data/exploits';

const ExploitsLibrary = () => {
  const [selectedFilter, setSelectedFilter] = useState<'all' | 'working' | 'easy' | 'webview' | 'chromeos' | 'bypass'>('all');

  const getFilteredExploits = () => {
    switch (selectedFilter) {
      case 'working':
        return workingExploits;
      case 'easy':
        return easyExploits;
      case 'webview':
        return exploitsByCategory.Webview;
      case 'chromeos':
        return exploitsByCategory.ChromeOS;
      case 'bypass':
        return exploitsByCategory.Bypass;
      default:
        return exploits;
    }
  };

  const filteredExploits = getFilteredExploits();

  const filters = [
    { id: 'all', label: 'All Exploits', count: exploits.length },
    { id: 'working', label: 'Working', count: workingExploits.length },
    { id: 'easy', label: 'Easy', count: easyExploits.length },
    { id: 'webview', label: 'Webviews', count: exploitsByCategory.Webview.length },
    { id: 'chromeos', label: 'ChromeOS', count: exploitsByCategory.ChromeOS.length },
    { id: 'bypass', label: 'Bypasses', count: exploitsByCategory.Bypass.length }
  ];

  return (
    <div className="mt-16 border-t border-gray-200/10 pt-12">
      {/* Header */}
      <div className="flex flex-col gap-6 p-4 mb-8">
        <div className="flex flex-col gap-3">
          <div className="flex items-center gap-3">
            <h2 className="text-white text-3xl font-bold tracking-tighter">Exploits Library</h2>
            <div className="px-3 py-1 bg-primary/10 border border-primary/30 rounded-full">
              <span className="text-primary text-sm font-bold">{filteredExploits.length} exploits</span>
            </div>
          </div>
          <p className="text-gray-400 text-base font-body leading-normal">
            Comprehensive collection of working exploits, bypasses, and tools from the community
          </p>
        </div>

        {/* Filter Tabs */}
        <div className="flex flex-wrap gap-2">
          {filters.map(filter => (
            <button
              key={filter.id}
              onClick={() => setSelectedFilter(filter.id as any)}
              className={`px-4 py-2 rounded-lg font-medium text-sm transition-all ${
                selectedFilter === filter.id
                  ? 'bg-primary/20 text-primary border border-primary/30'
                  : 'bg-card-dark/50 text-gray-400 border border-gray-200/10 hover:border-primary/20 hover:text-gray-300'
              }`}
            >
              {filter.label}
              <span className="ml-2 text-xs opacity-70">({filter.count})</span>
            </button>
          ))}
        </div>
      </div>

      {/* Exploits Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 p-4">
        {filteredExploits.map(exploit => (
          <ExploitCard key={exploit.id} exploit={exploit} />
        ))}
      </div>

      {/* Stats Footer */}
      <div className="mt-8 p-6 bg-card-dark/30 border border-gray-200/10 rounded-lg">
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
          <div className="flex flex-col gap-1">
            <span className="text-2xl font-bold text-primary">{exploits.length}</span>
            <span className="text-xs text-gray-500 uppercase tracking-wider">Total Exploits</span>
          </div>
          <div className="flex flex-col gap-1">
            <span className="text-2xl font-bold text-green-400">{workingExploits.length}</span>
            <span className="text-xs text-gray-500 uppercase tracking-wider">Working</span>
          </div>
          <div className="flex flex-col gap-1">
            <span className="text-2xl font-bold text-blue-400">{exploitsByCategory.Webview.length}</span>
            <span className="text-xs text-gray-500 uppercase tracking-wider">Webviews</span>
          </div>
          <div className="flex flex-col gap-1">
            <span className="text-2xl font-bold text-yellow-400">{exploitsByCategory.ChromeOS.length}</span>
            <span className="text-xs text-gray-500 uppercase tracking-wider">ChromeOS</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ExploitsLibrary;


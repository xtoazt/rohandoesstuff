import { Exploit } from '../data/exploits';

interface ExploitCardProps {
  exploit: Exploit;
}

const ExploitCard = ({ exploit }: ExploitCardProps) => {
  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'Easy':
        return 'bg-green-500/20 text-green-400 border-green-500/30';
      case 'Medium':
        return 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30';
      case 'Hard':
        return 'bg-red-500/20 text-red-400 border-red-500/30';
      default:
        return 'bg-gray-500/20 text-gray-400 border-gray-500/30';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'Working':
        return 'bg-primary/20 text-primary border-primary/30';
      case 'Patched':
        return 'bg-red-500/20 text-red-400 border-red-500/30';
      case 'Untested':
        return 'bg-orange-500/20 text-orange-400 border-orange-500/30';
      default:
        return 'bg-gray-500/20 text-gray-400 border-gray-500/30';
    }
  };

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'Webview':
        return '🌐';
      case 'ChromeOS':
        return '💻';
      case 'Bypass':
        return '🔓';
      case 'VM':
        return '🖥️';
      case 'Extension':
        return '🧩';
      case 'Network':
        return '🌐';
      default:
        return '⚡';
    }
  };

  return (
    <div className="group flex flex-col gap-4 p-5 bg-card-dark/50 border border-gray-200/10 rounded-lg hover:border-primary/30 hover:bg-card-dark transition-all duration-300">
      {/* Header */}
      <div className="flex items-start justify-between gap-3">
        <div className="flex items-start gap-3 flex-1">
          <span className="text-2xl flex-shrink-0">{getCategoryIcon(exploit.category)}</span>
          <div className="flex flex-col gap-2 flex-1 min-w-0">
            <h3 className="text-white font-bold text-lg leading-tight group-hover:text-primary transition-colors">
              {exploit.title}
            </h3>
            <p className="text-gray-400 text-sm font-body leading-relaxed">
              {exploit.description}
            </p>
          </div>
        </div>
      </div>

      {/* Badges */}
      <div className="flex flex-wrap gap-2">
        <span className={`px-2 py-1 rounded text-[10px] font-bold uppercase tracking-wider border ${getStatusColor(exploit.status)}`}>
          {exploit.status}
        </span>
        <span className={`px-2 py-1 rounded text-[10px] font-bold uppercase tracking-wider border ${getDifficultyColor(exploit.difficulty)}`}>
          {exploit.difficulty}
        </span>
        <span className="px-2 py-1 rounded text-[10px] font-bold uppercase tracking-wider bg-blue-500/20 text-blue-400 border border-blue-500/30">
          {exploit.category}
        </span>
      </div>

      {/* Tags */}
      {exploit.tags && exploit.tags.length > 0 && (
        <div className="flex flex-wrap gap-1.5">
          {exploit.tags.slice(0, 4).map((tag, index) => (
            <span 
              key={index}
              className="px-2 py-0.5 bg-gray-700/30 text-gray-400 text-[10px] rounded font-body"
            >
              #{tag}
            </span>
          ))}
        </div>
      )}

      {/* Details */}
      <div className="flex flex-col gap-2 pt-2 border-t border-gray-200/10">
        {exploit.requirements && exploit.requirements.length > 0 && (
          <div className="flex flex-col gap-1">
            <span className="text-xs font-bold text-gray-500 uppercase tracking-wider">Requirements:</span>
            <ul className="text-xs text-gray-400 font-body list-disc list-inside space-y-0.5">
              {exploit.requirements.map((req, index) => (
                <li key={index}>{req}</li>
              ))}
            </ul>
          </div>
        )}

        {exploit.instructions && (
          <div className="flex flex-col gap-1 mt-1">
            <span className="text-xs font-bold text-gray-500 uppercase tracking-wider">Instructions:</span>
            <p className="text-xs text-gray-400 font-body leading-relaxed">
              {exploit.instructions}
            </p>
          </div>
        )}

        {exploit.notes && (
          <div className="flex items-start gap-2 mt-1 p-2 bg-orange-500/5 border border-orange-500/20 rounded">
            <span className="material-symbols-outlined text-orange-400 text-sm flex-shrink-0">
              info
            </span>
            <p className="text-xs text-orange-400 font-body leading-relaxed">
              {exploit.notes}
            </p>
          </div>
        )}
      </div>

      {/* Footer */}
      <div className="flex items-center justify-between text-xs text-gray-500 font-body pt-2 border-t border-gray-200/10">
        <span>By {exploit.author}</span>
        <span>{exploit.dateAdded}</span>
      </div>
    </div>
  );
};

export default ExploitCard;

